%Yohannes Azeze
%12/05/18
%NLMS Filter - Pure ECG Signal used as a reference

% The data used in this project is taken from the MIT-BIH Noise Stress Test Database. The noise
% recordings were made using physically active volunteers and standard ECG recorders, leads, and
% electrodes; the electrodes were placed on the limbs in positions in which the subjectsâ€™ ECGs were
% not visible. The three noise records were assembled from the recordings by selecting intervals 
% that contained predominantly baseline wander, muscle artifact, and electrode motion artifact.
% Noise was added beginning after the first 5 minutes of each record, during two-minute segments 
% alternating with two-minute clean segments. 
% The signal-to-noise ratios (SNRs) of all the signals used in this project is provided in this database as well.

clear all;
clc;

Data = load('118m.mat'); %Noise Free Signal (Reference Signal)
D = cell2mat(struct2cell(Data));
D = D(1,:);                                     
Data = load('118e06m.mat'); %Noisy Signal
X = cell2mat(struct2cell(Data));
X = X(1,:); 
Data = load('bwm.mat'); %Baseline wander Noise
Bw = cell2mat(struct2cell(Data));
Bw = Bw(1,:);
Data = load('mam.mat'); %Muscle Artifact
Ma = cell2mat(struct2cell(Data));
Ma = Ma(1,:);
Data = load('emm.mat'); %Electrode motion artifact
Em = cell2mat(struct2cell(Data));
Em = Em(1,:);
Total_Noise = Bw+Em+Ma; %Total Noise

f =1800;
s = size(X,2);
d = D(111000:111000+f-1)'; %Clean Signal
x = X(111000:111000+f-1)'; %Taking the noisy portion of the input signal
TN = Total_Noise(111000:111000+f-1)'; %Corresponding Total Noise
bw = Bw(111000:111000+f-1)';
ma = Ma(111000:111000+f-1)';
em = Em(111000:111000+f-1)';


N=4; % Sampling Rate
W=zeros(N,1); %Initialize weights
alpha= 0.001;
mu=0.0002;
itr=1000;
MSE =zeros(1,itr);
Dw = [zeros(N-1,1); d]; %Padding reference signal with zeros

%NLMS Algorithm
for i = 1:itr
    for k = 1:f
       X = Dw(k+N-1:-1:k);
       y = W'*X;
       e(k,1) = x(k,1)-y; %Error signal
       p = alpha + X'*X;
       W = W + (2*mu*e(k,1)/p)*X;
    end     
     E =(e'*e)*1/f;
     MSE(i) = log10(E);
end
Y = x-e; %Calculating Filtered Signal by removing the estimated error above


%Plots
subplot(3,1,1)
plot(x);title('Raw')
subplot(3,1,2)
plot(Y);title('Filtered')
subplot(3,1,3)
plot(d, 'k');title('Clean')

figure;
subplot(2,1,1)
plot(MSE);title('MSE');

